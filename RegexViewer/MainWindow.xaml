<Window x:Class="RegexViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:RegexViewer"
        AllowDrop="True"
        Drop="FileData_Drop"
        Title="RegexViewer" Height="600" Width="900">

    <Window.Resources>
        <local:MainViewModel x:Key="mainViewModel" />
        <local:RegexViewerSettings x:Key="settings" />
        <local:LogTabViewModel x:Key="logTabViewModel" />
        <local:FilterTabViewModel x:Key="filterTabViewModel" />

        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <ObjectDataProvider MethodName="GetType"  ObjectType="{x:Type sys:Type}" x:Key="colorsTypeOdp">
            <ObjectDataProvider.MethodParameters>
                <sys:String>System.Windows.Media.Colors, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</sys:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider ObjectInstance="{StaticResource colorsTypeOdp}" MethodName="GetProperties" x:Key="colorPropertiesOdp" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.CloseCommand}" CommandParameter="{Binding}" Gesture="Ctrl+F4" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.HideCommand}" CommandParameter="{Binding ElementName=listboxStatus}" Gesture="Ctrl+H" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.GotoLineCommand}" CommandParameter="{Binding ElementName=listboxStatus}" Gesture="Ctrl+G" />
        <!--<KeyBinding Command="{Binding GotoLineCommand}" CommandParameter="{Binding}" Gesture="Ctrl+G" />-->

        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.OpenCommand}" CommandParameter="{Binding}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.SaveAsCommand}" CommandParameter="{Binding}" Gesture="Ctrl+S" />

        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.CloseCommand}" CommandParameter="{Binding}" Gesture="Ctrl+Alt+F4" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.OpenCommand}" CommandParameter="{Binding}" Gesture="Ctrl+Alt+O" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.NewCommand}" CommandParameter="{Binding}" Gesture="Ctrl+Alt+N" />
        <KeyBinding Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.SaveCommand}" CommandParameter="{Binding}" Gesture="Ctrl+Alt+S" />
    </Window.InputBindings>

    <DockPanel DataContext="{StaticResource mainViewModel}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open Log" Command="{Binding LogViewModel.OpenCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+O" />
                <MenuItem Header="_Close Log" Command="{Binding LogViewModel.CloseCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+F4" />
                <MenuItem Header="_Close All Logs" Command="{Binding LogViewModel.CloseAllCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Shift+F4" />
                <MenuItem Header="Show / _Hide All Items" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.HideCommand}" InputGestureText="Ctrl+H" />
            </MenuItem>
            <MenuItem Header="_Filter">
                <MenuItem Header="_Open Filter" Command="{Binding FilterViewModel.OpenCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Alt+O" />
                <MenuItem Header="_Close Filter" Command="{Binding FilterViewModel.CloseCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Alt+F4" />
                <MenuItem Header="_Close All Filters" Command="{Binding FilterViewModel.CloseAllCommand}" CommandParameter="{Binding}" />
                <MenuItem Header="_New Filter" Command="{Binding FilterViewModel.NewCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Alt+N" />
                <MenuItem Header="_Save Filter" Command="{Binding FilterViewModel.SaveCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Alt+S" />
                <MenuItem Header="_Save Filter As" Command="{Binding FilterViewModel.SaveAsCommand}" CommandParameter="{Binding}" />
            </MenuItem>
            <!--<MenuItem Header="_Options">
                <MenuItem Header="_Settings" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Help" />
            </MenuItem>-->
        </Menu>

        <Grid x:Name="GridMain" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="20*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="80*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>

<!-- vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv FILTER FILE DATA vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -->

            <TabControl x:Name="tabFilters"
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding Path=FilterViewModel.TabItems}"
                        SelectedIndex="{Binding Path=FilterViewModel.SelectedIndex, Mode=TwoWay}"
                        Margin="0,0,0,0" VerticalAlignment="Stretch">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Header}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate x:Uid="tabContent">
                    <DataTemplate>
                        <DataGrid x:Name="dataGridFilter"

                          ItemsSource="{Binding Path=ContentList, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          Grid.Row="0"
                          HorizontalAlignment="Stretch"
                          Margin="0,0,0,0"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          VerticalAlignment="Stretch"
                          CanUserAddRows="False"
                          Background="{Binding Source={StaticResource settings}, Path=Settings.BackgroundColor}"
                          Tag="{Binding}"
                          DataGridCell.PreviewKeyUp="DataGridCell_KeyUp"
                          DataGridCell.PreviewKeyDown="DataGridCell_KeyDown"
                          DataGridCell.GotFocus="DataGrid_CellGotFocus">
                            <!--DataGridCell.GotFocus="DataGrid_CellGotFocus"
                            DataGridCell.KeyDown="DataGridCell_KeyDown"-->

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Setters>
                                        <Setter Property="Background" Value="{Binding Source={StaticResource settings}, Path=Settings.BackgroundColor}" />
                                        <Setter Property="Foreground" Value="{Binding Source={StaticResource settings}, Path=Settings.ForegroundColor}" />
                                        <Setter Property="FontSize" Value="{Binding Source={StaticResource settings}, Path=Settings.FontSize}" />
                                        <Setter Property="FontFamily" Value="{Binding Source={StaticResource settings}, Path=Settings.FontName}" />
                                    </Style.Setters>
                                </Style>
                            </DataGrid.CellStyle>
                            <!--<DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
                                </Style>
                            </DataGrid.Resources>-->

                            <DataGrid.InputBindings>
                                <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyCommand}" CommandParameter="{Binding Path=ContentList}" />
                            </DataGrid.InputBindings>

                            <DataGrid.ContextMenu>
                                <ContextMenu HasDropShadow="True">
                                    <MenuItem Header="Close Filter" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.CloseCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Alt+F4" />
                                    <MenuItem Header="Close All Filters" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.CloseAllCommand}" CommandParameter="{Binding}" />
                                    <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding Path=ContentList}" InputGestureText="Ctrl+C" />
                                    <MenuItem Header="New Filter" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.NewCommand}" InputGestureText="Ctrl+Alt+N" />
                                    <MenuItem Header="Open Filter" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.OpenCommand}" InputGestureText="Ctrl+Alt+O" />
                                    <MenuItem Header="Save Filter" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.SaveCommand}" InputGestureText="Ctrl+Alt+S" />
                                    <MenuItem Header="Save Filter As" Command="{Binding Source={StaticResource mainViewModel}, Path=FilterViewModel.SaveAsCommand}" CommandParameter="{Binding}" />
                                    <MenuItem Header="Select All" Command="{Binding SelectAllCommand}" />
                                    <!--<MenuItem Header="Find" Command="{Binding FindCommand}" />-->
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Index" Binding="{Binding Path=Index}" SortDirection="Ascending" />
                                <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding Path=Enabled}" />
                                <DataGridCheckBoxColumn Header="Exclude" Binding="{Binding Path=Exclude}" />
                                <DataGridCheckBoxColumn Header="Regex" Binding="{Binding Path=Regex}" />
                                <DataGridTextColumn Width="300" Header="Filter Pattern" Binding="{Binding Path=Filterpattern, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Setters>
                                                <Setter Property="Background" Value="{Binding Path=BackgroundColor, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" />
                                                <Setter Property="Foreground" Value="{Binding Path=ForegroundColor, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" />
                                                <Setter Property="FontSize" Value="{Binding Source={StaticResource settings}, Path=Settings.FontSize}" />
                                                <Setter Property="FontFamily" Value="{Binding Source={StaticResource settings}, Path=Settings.FontName}" />
                                            </Style.Setters>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Count" Binding="{Binding Path=Count}" IsReadOnly="True" />
                                <DataGridTemplateColumn Header="Background Color">
                                    <DataGridTemplateColumn.CellTemplate>

                                        <DataTemplate>
                                            <ComboBox Name="backgroundColorCombo"
                                                  ItemsSource="{Binding Source={StaticResource colorPropertiesOdp}}"
                                                  SelectedValuePath="Name"
                                                  SelectedValue="{Binding BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  GotFocus="colorCombo_Selected"
                                                  KeyDown="colorCombo_KeyDown">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="20" Height="15" Margin="0,0,5,0" Background="{Binding Name}" />
                                                            <TextBlock Name="backgroundColorText" Text="{Binding Name}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Foreground Color">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox Name="foregroundColorCombo"

                                                  ItemsSource="{Binding Source={StaticResource colorPropertiesOdp}}"
                                                  SelectedValuePath="Name"
                                                  SelectedValue="{Binding ForegroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  GotFocus="colorCombo_Selected"
                                                  KeyDown="colorCombo_KeyDown">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="20" Height="15" Margin="0,0,5,0" Background="{Binding Name}" />
                                                            <TextBlock  Text="{Binding Name}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Notes" Binding="{Binding Path=Notes}" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <TabControl.ContextMenu>
                    <ContextMenu HasDropShadow="True">
                        <!--<MenuItem Header="Copy" Command="ApplicationCommands.Copy" CommandTarget="{Binding ElementName=logFileData}" />-->
                        <MenuItem Header="Close Filter" Command="{Binding FilterViewModel.CloseCommand}" />
                        <MenuItem Header="Close All Filters" Command="{Binding FilterViewModel.CloseAllCommand}" />
                        <MenuItem Header="Open Filter" Command="{Binding FilterViewModel.OpenCommand}" />
                        <MenuItem Header="New Filter" Command="{Binding FilterViewModel.NewCommand}" />
                        <MenuItem Header="Save Filter" Command="{Binding FilterViewModel.SaveCommand}" />
                        <MenuItem Header="Save Filter As" Command="{Binding FilterViewModel.SaveAsCommand}" CommandParameter="{Binding}" />
                        <!--<MenuItem Header="Copy" Command="{Binding LogViewModel.CopyCommand}" CommandTarget="{Binding ElementName=logFileData}" />-->
                    </ContextMenu>
                </TabControl.ContextMenu>
            </TabControl>
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="10" />

<!-- vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv LOG FILE DATA vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -->

            <TabControl x:Name="tabLogs" Grid.Row="2" HorizontalAlignment="Stretch"
                        Margin="0,0,0,0" VerticalAlignment="Stretch"
                        ItemsSource="{Binding Path=LogViewModel.TabItems}"
                        SelectedIndex="{Binding Path=LogViewModel.SelectedIndex, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Header}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate x:Uid="logFileContent">
                    <DataTemplate>
                        <ListBox x:Name="logFileData"

                                 ItemsSource="{Binding Path=ContentList}"
                                 SelectionMode="Extended"
                                 FontFamily="{Binding Source={StaticResource settings}, Path=Settings.FontName}"
                                 Background="{Binding Source={StaticResource settings}, Path=Settings.BackgroundColor}"
                                 VirtualizingStackPanel.IsVirtualizing="True"
                                 VirtualizingStackPanel.VirtualizationMode="Recycling"
                                 ScrollViewer.IsDeferredScrollingEnabled="False"
                                 SelectedIndex="{Binding Path=SelectedIndex}"
                                 IsSynchronizedWithCurrentItem="True">

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Index}"
                                               Margin="0,0,5,0"
                                               FontSize="{Binding Source={StaticResource settings}, Path=Settings.FontSize}"
                                               FontFamily="{Binding Source={StaticResource settings}, Path=Settings.FontName}"
                                               Foreground="{Binding Path=Foreground}"
                                               Background="{Binding Path=Background}" />
                                        <TextBlock Text="{Binding Path=Content}"
                                               FontSize="{Binding Source={StaticResource settings}, Path=Settings.FontSize}"
                                               FontFamily="{Binding Source={StaticResource settings}, Path=Settings.FontName}"
                                               Foreground="{Binding Path=Foreground}"
                                               Background="{Binding Path=Background}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <!--<i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"  CommandParameter="{Binding ElementName=logFileData, Path=SelectedItems}" />-->
                                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"  CommandParameter="{Binding ElementName=logFileData}" />
                                </i:EventTrigger>
                                <!--<i:EventTrigger EventName="SelectedIndex">
                                    <i:InvokeCommandAction Command="{Binding SelectedIndexChangedCommand}"  CommandParameter="{Binding}" />
                                </i:EventTrigger>-->
                                <i:EventTrigger EventName="LayoutUpdated">
                                    <i:InvokeCommandAction Command="{Binding SetViewerCommand}"  CommandParameter="{Binding ElementName=logFileData}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewKeyDown">
                                    <i:InvokeCommandAction Command="{Binding KeyDownCommand}"  CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListBox.InputBindings>
                                <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyCommand}" />
                                <!--<KeyBinding Key="G" Modifiers="Control" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.GotoLineCommand}" CommandParameter="{Binding}" />-->
                            </ListBox.InputBindings>

                            <ListBox.ContextMenu>
                                <ContextMenu HasDropShadow="True">
                                    <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding Path=ContentList}" InputGestureText="Ctrl+C" />
                                    <MenuItem Header="Close Log" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.CloseCommand}" InputGestureText="Ctrl+F4" />
                                    <MenuItem Header="Save Filtered View" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.SaveAsCommand}" InputGestureText="Ctrl+S" />
                                    <MenuItem Header="Close All Logs" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.CloseAllCommand}" InputGestureText="Ctrl+Shift+F4" />
                                    <MenuItem Header="Open Log" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.OpenCommand}" InputGestureText="Ctrl+O" />
                                    <MenuItem Header="Goto Line" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.GotoLineCommand}" CommandParameter="{Binding ElementName=listboxStatus}" InputGestureText="Ctrl+G" />
                                    <MenuItem Header="Show / Hide All Items" Command="{Binding Source={StaticResource mainViewModel}, Path=LogViewModel.HideCommand}" CommandParameter="{Binding ElementName=listboxStatus}" InputGestureText="Ctrl+H" />
                                    <MenuItem Header="Select All" Command="{Binding SelectAllCommand}" InputGestureText="Ctrl+A" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </DataTemplate>
                </TabControl.ContentTemplate>

                <TabControl.ContextMenu>
                    <ContextMenu HasDropShadow="True">
                        <MenuItem Header="Close File" Command="{Binding LogViewModel.CloseCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+F4" />
                        <MenuItem Header="Close All Files" Command="{Binding LogViewModel.CloseAllCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+Shift+F4" />
                        <MenuItem Header="Open File" Command="{Binding LogViewModel.OpenCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+O" />
                        <MenuItem Header="Show / Hide All Items" Command="{Binding LogViewModel.HideCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+H" />
                    </ContextMenu>
                </TabControl.ContextMenu>
            </TabControl>

            <Grid x:Name="GridStatus" Grid.Row="3" Height="25" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Name="labelStatus" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Content="Status:" Width="50"  Height="25" />

                <ListBox x:Name="listboxStatus" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                     Margin="50,0,0,0"
                     SelectionMode="Extended"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     SelectedIndex="{Binding Path=StatusIndex}"
                     Height="25"
                     ItemsSource="{Binding Path=Status}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding StatusChangedCommand}"  CommandParameter="{Binding ElementName=listboxStatus}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.InputBindings>
                        <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyCommand}"  CommandParameter="{Binding Path=Status}" />
                    </ListBox.InputBindings>

                    <ListBox.ContextMenu>
                        <ContextMenu HasDropShadow="True">
                            <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding Path=Status}" InputGestureText="Ctrl+C" />

                            <MenuItem Header="Select All" Command="{Binding SelectAllCommand}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
                <GridSplitter Grid.Column="1" Height="25" Width="5" HorizontalAlignment="Center" />
                <Label Name="labelQuickFind" HorizontalAlignment="Left" Height="25" VerticalAlignment="Bottom" Grid.Column="2" Content="Quick Find:" Width="75" />
                <TextBox Name="textboxQuickFind"
                    Height="25"
                     Grid.Column="2"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Bottom"
                     Margin="75,0,0,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding LogViewModel.QuickFindChangedCommand}"  CommandParameter="{Binding ElementName=textboxQuickFind, Path=Text}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>